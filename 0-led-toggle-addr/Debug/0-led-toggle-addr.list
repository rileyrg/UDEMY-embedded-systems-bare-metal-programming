
0-led-toggle-addr.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000016c  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800022c  08000234  00010234  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800022c  0800022c  00010234  2**0
                  CONTENTS
  4 .ARM          00000000  0800022c  0800022c  00010234  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800022c  08000234  00010234  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800022c  0800022c  0001022c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000230  08000230  00010230  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010234  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000234  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000234  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00010234  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000085  00000000  00000000  0001025c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000006c  00000000  00000000  000102e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  00010350  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000030  00000000  00000000  00010398  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000b13  00000000  00000000  000103c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000000e4  00000000  00000000  00010edb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003003  00000000  00000000  00010fbf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00013fc2  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000005c  00000000  00000000  00014018  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08000214 	.word	0x08000214

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	08000214 	.word	0x08000214

08000108 <main>:

#define PIN5 (1U << 5)
#define LED_PIN PIN5

int main(void)
{
 8000108:	b580      	push	{r7, lr}
 800010a:	b082      	sub	sp, #8
 800010c:	af00      	add	r7, sp, #0
     /* 1 enable clock access */
     RCC_AHBENR |= GPIOA_EN;
 800010e:	4b16      	ldr	r3, [pc, #88]	; (8000168 <main+0x60>)
 8000110:	681b      	ldr	r3, [r3, #0]
 8000112:	001a      	movs	r2, r3
 8000114:	2380      	movs	r3, #128	; 0x80
 8000116:	029b      	lsls	r3, r3, #10
 8000118:	431a      	orrs	r2, r3
 800011a:	4b13      	ldr	r3, [pc, #76]	; (8000168 <main+0x60>)
 800011c:	601a      	str	r2, [r3, #0]

     /* 2 set PA5 as output */
     GPIOA_MODER |= (1U<<10); /* bit 10 to 1 */
 800011e:	2390      	movs	r3, #144	; 0x90
 8000120:	05db      	lsls	r3, r3, #23
 8000122:	681b      	ldr	r3, [r3, #0]
 8000124:	001a      	movs	r2, r3
 8000126:	2380      	movs	r3, #128	; 0x80
 8000128:	00db      	lsls	r3, r3, #3
 800012a:	431a      	orrs	r2, r3
 800012c:	2390      	movs	r3, #144	; 0x90
 800012e:	05db      	lsls	r3, r3, #23
 8000130:	601a      	str	r2, [r3, #0]
     GPIOA_MODER &=~(1U<<11); /* bit 11 to 0 */
 8000132:	2390      	movs	r3, #144	; 0x90
 8000134:	05db      	lsls	r3, r3, #23
 8000136:	681a      	ldr	r2, [r3, #0]
 8000138:	2390      	movs	r3, #144	; 0x90
 800013a:	05db      	lsls	r3, r3, #23
 800013c:	490b      	ldr	r1, [pc, #44]	; (800016c <main+0x64>)
 800013e:	400a      	ands	r2, r1
 8000140:	601a      	str	r2, [r3, #0]

     while(1){
          /* /\* set PA5 high *\/ */
          /* GPIOA_ODR |= LED_PIN; */
          /* toggle */
          GPIOA_ODR ^= LED_PIN;
 8000142:	4b0b      	ldr	r3, [pc, #44]	; (8000170 <main+0x68>)
 8000144:	681b      	ldr	r3, [r3, #0]
 8000146:	001a      	movs	r2, r3
 8000148:	2320      	movs	r3, #32
 800014a:	405a      	eors	r2, r3
 800014c:	4b08      	ldr	r3, [pc, #32]	; (8000170 <main+0x68>)
 800014e:	601a      	str	r2, [r3, #0]
          for(int i =0; i <= 100000; i++){
 8000150:	2300      	movs	r3, #0
 8000152:	607b      	str	r3, [r7, #4]
 8000154:	e002      	b.n	800015c <main+0x54>
 8000156:	687b      	ldr	r3, [r7, #4]
 8000158:	3301      	adds	r3, #1
 800015a:	607b      	str	r3, [r7, #4]
 800015c:	687b      	ldr	r3, [r7, #4]
 800015e:	4a05      	ldr	r2, [pc, #20]	; (8000174 <main+0x6c>)
 8000160:	4293      	cmp	r3, r2
 8000162:	ddf8      	ble.n	8000156 <main+0x4e>
          GPIOA_ODR ^= LED_PIN;
 8000164:	e7ed      	b.n	8000142 <main+0x3a>
 8000166:	46c0      	nop			; (mov r8, r8)
 8000168:	40021014 	.word	0x40021014
 800016c:	fffff7ff 	.word	0xfffff7ff
 8000170:	48000014 	.word	0x48000014
 8000174:	000186a0 	.word	0x000186a0

08000178 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000178:	480d      	ldr	r0, [pc, #52]	; (80001b0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800017a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800017c:	e000      	b.n	8000180 <Reset_Handler+0x8>
 800017e:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000180:	480c      	ldr	r0, [pc, #48]	; (80001b4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000182:	490d      	ldr	r1, [pc, #52]	; (80001b8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000184:	4a0d      	ldr	r2, [pc, #52]	; (80001bc <LoopForever+0xe>)
  movs r3, #0
 8000186:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000188:	e002      	b.n	8000190 <LoopCopyDataInit>

0800018a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800018a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800018c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800018e:	3304      	adds	r3, #4

08000190 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000190:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000192:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000194:	d3f9      	bcc.n	800018a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000196:	4a0a      	ldr	r2, [pc, #40]	; (80001c0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000198:	4c0a      	ldr	r4, [pc, #40]	; (80001c4 <LoopForever+0x16>)
  movs r3, #0
 800019a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800019c:	e001      	b.n	80001a2 <LoopFillZerobss>

0800019e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800019e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001a0:	3204      	adds	r2, #4

080001a2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001a2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001a4:	d3fb      	bcc.n	800019e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80001a6:	f000 f811 	bl	80001cc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001aa:	f7ff ffad 	bl	8000108 <main>

080001ae <LoopForever>:

LoopForever:
    b LoopForever
 80001ae:	e7fe      	b.n	80001ae <LoopForever>
  ldr   r0, =_estack
 80001b0:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 80001b4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80001b8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80001bc:	08000234 	.word	0x08000234
  ldr r2, =_sbss
 80001c0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80001c4:	2000001c 	.word	0x2000001c

080001c8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80001c8:	e7fe      	b.n	80001c8 <ADC_IRQHandler>
	...

080001cc <__libc_init_array>:
 80001cc:	b570      	push	{r4, r5, r6, lr}
 80001ce:	2600      	movs	r6, #0
 80001d0:	4d0c      	ldr	r5, [pc, #48]	; (8000204 <__libc_init_array+0x38>)
 80001d2:	4c0d      	ldr	r4, [pc, #52]	; (8000208 <__libc_init_array+0x3c>)
 80001d4:	1b64      	subs	r4, r4, r5
 80001d6:	10a4      	asrs	r4, r4, #2
 80001d8:	42a6      	cmp	r6, r4
 80001da:	d109      	bne.n	80001f0 <__libc_init_array+0x24>
 80001dc:	2600      	movs	r6, #0
 80001de:	f000 f819 	bl	8000214 <_init>
 80001e2:	4d0a      	ldr	r5, [pc, #40]	; (800020c <__libc_init_array+0x40>)
 80001e4:	4c0a      	ldr	r4, [pc, #40]	; (8000210 <__libc_init_array+0x44>)
 80001e6:	1b64      	subs	r4, r4, r5
 80001e8:	10a4      	asrs	r4, r4, #2
 80001ea:	42a6      	cmp	r6, r4
 80001ec:	d105      	bne.n	80001fa <__libc_init_array+0x2e>
 80001ee:	bd70      	pop	{r4, r5, r6, pc}
 80001f0:	00b3      	lsls	r3, r6, #2
 80001f2:	58eb      	ldr	r3, [r5, r3]
 80001f4:	4798      	blx	r3
 80001f6:	3601      	adds	r6, #1
 80001f8:	e7ee      	b.n	80001d8 <__libc_init_array+0xc>
 80001fa:	00b3      	lsls	r3, r6, #2
 80001fc:	58eb      	ldr	r3, [r5, r3]
 80001fe:	4798      	blx	r3
 8000200:	3601      	adds	r6, #1
 8000202:	e7f2      	b.n	80001ea <__libc_init_array+0x1e>
 8000204:	0800022c 	.word	0x0800022c
 8000208:	0800022c 	.word	0x0800022c
 800020c:	0800022c 	.word	0x0800022c
 8000210:	08000230 	.word	0x08000230

08000214 <_init>:
 8000214:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000216:	46c0      	nop			; (mov r8, r8)
 8000218:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800021a:	bc08      	pop	{r3}
 800021c:	469e      	mov	lr, r3
 800021e:	4770      	bx	lr

08000220 <_fini>:
 8000220:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000222:	46c0      	nop			; (mov r8, r8)
 8000224:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000226:	bc08      	pop	{r3}
 8000228:	469e      	mov	lr, r3
 800022a:	4770      	bx	lr
