
0-led-toggle-addr.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001b8  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000278  08000280  00010280  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000278  08000278  00010280  2**0
                  CONTENTS
  4 .ARM          00000000  08000278  08000278  00010280  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000278  08000280  00010280  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000278  08000278  00010278  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800027c  0800027c  0001027c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010280  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000280  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000280  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00010280  2**0
                  CONTENTS, READONLY
 12 .comment      00000081  00000000  00000000  000102a8  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000019f  00000000  00000000  00010329  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000138  00000000  00000000  000104c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000068  00000000  00000000  00010600  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000030  00000000  00000000  00010668  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000ae3  00000000  00000000  00010698  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000001e0  00000000  00000000  0001117b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000030ba  00000000  00000000  0001135b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000005c  00000000  00000000  00014418  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_loc    00000098  00000000  00000000  00014474  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <deregister_tm_clones>:
 80000c0:	4804      	ldr	r0, [pc, #16]	; (80000d4 <deregister_tm_clones+0x14>)
 80000c2:	4b05      	ldr	r3, [pc, #20]	; (80000d8 <deregister_tm_clones+0x18>)
 80000c4:	b510      	push	{r4, lr}
 80000c6:	4283      	cmp	r3, r0
 80000c8:	d003      	beq.n	80000d2 <deregister_tm_clones+0x12>
 80000ca:	4b04      	ldr	r3, [pc, #16]	; (80000dc <deregister_tm_clones+0x1c>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d000      	beq.n	80000d2 <deregister_tm_clones+0x12>
 80000d0:	4798      	blx	r3
 80000d2:	bd10      	pop	{r4, pc}
 80000d4:	20000000 	.word	0x20000000
 80000d8:	20000000 	.word	0x20000000
 80000dc:	00000000 	.word	0x00000000

080000e0 <register_tm_clones>:
 80000e0:	4806      	ldr	r0, [pc, #24]	; (80000fc <register_tm_clones+0x1c>)
 80000e2:	4907      	ldr	r1, [pc, #28]	; (8000100 <register_tm_clones+0x20>)
 80000e4:	1a09      	subs	r1, r1, r0
 80000e6:	108b      	asrs	r3, r1, #2
 80000e8:	0fc9      	lsrs	r1, r1, #31
 80000ea:	18c9      	adds	r1, r1, r3
 80000ec:	b510      	push	{r4, lr}
 80000ee:	1049      	asrs	r1, r1, #1
 80000f0:	d003      	beq.n	80000fa <register_tm_clones+0x1a>
 80000f2:	4b04      	ldr	r3, [pc, #16]	; (8000104 <register_tm_clones+0x24>)
 80000f4:	2b00      	cmp	r3, #0
 80000f6:	d000      	beq.n	80000fa <register_tm_clones+0x1a>
 80000f8:	4798      	blx	r3
 80000fa:	bd10      	pop	{r4, pc}
 80000fc:	20000000 	.word	0x20000000
 8000100:	20000000 	.word	0x20000000
 8000104:	00000000 	.word	0x00000000

08000108 <__do_global_dtors_aux>:
 8000108:	b510      	push	{r4, lr}
 800010a:	4c07      	ldr	r4, [pc, #28]	; (8000128 <__do_global_dtors_aux+0x20>)
 800010c:	7823      	ldrb	r3, [r4, #0]
 800010e:	2b00      	cmp	r3, #0
 8000110:	d109      	bne.n	8000126 <__do_global_dtors_aux+0x1e>
 8000112:	f7ff ffd5 	bl	80000c0 <deregister_tm_clones>
 8000116:	4b05      	ldr	r3, [pc, #20]	; (800012c <__do_global_dtors_aux+0x24>)
 8000118:	2b00      	cmp	r3, #0
 800011a:	d002      	beq.n	8000122 <__do_global_dtors_aux+0x1a>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x28>)
 800011e:	e000      	b.n	8000122 <__do_global_dtors_aux+0x1a>
 8000120:	bf00      	nop
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	20000000 	.word	0x20000000
 800012c:	00000000 	.word	0x00000000
 8000130:	08000260 	.word	0x08000260

08000134 <frame_dummy>:
 8000134:	4b05      	ldr	r3, [pc, #20]	; (800014c <frame_dummy+0x18>)
 8000136:	b510      	push	{r4, lr}
 8000138:	2b00      	cmp	r3, #0
 800013a:	d003      	beq.n	8000144 <frame_dummy+0x10>
 800013c:	4904      	ldr	r1, [pc, #16]	; (8000150 <frame_dummy+0x1c>)
 800013e:	4805      	ldr	r0, [pc, #20]	; (8000154 <frame_dummy+0x20>)
 8000140:	e000      	b.n	8000144 <frame_dummy+0x10>
 8000142:	bf00      	nop
 8000144:	f7ff ffcc 	bl	80000e0 <register_tm_clones>
 8000148:	bd10      	pop	{r4, pc}
 800014a:	46c0      	nop			; (mov r8, r8)
 800014c:	00000000 	.word	0x00000000
 8000150:	20000004 	.word	0x20000004
 8000154:	08000260 	.word	0x08000260

08000158 <__libc_init_array>:
 8000158:	b570      	push	{r4, r5, r6, lr}
 800015a:	4d0c      	ldr	r5, [pc, #48]	; (800018c <__libc_init_array+0x34>)
 800015c:	4e0c      	ldr	r6, [pc, #48]	; (8000190 <__libc_init_array+0x38>)
 800015e:	1b76      	subs	r6, r6, r5
 8000160:	10b6      	asrs	r6, r6, #2
 8000162:	d005      	beq.n	8000170 <__libc_init_array+0x18>
 8000164:	2400      	movs	r4, #0
 8000166:	cd08      	ldmia	r5!, {r3}
 8000168:	3401      	adds	r4, #1
 800016a:	4798      	blx	r3
 800016c:	42a6      	cmp	r6, r4
 800016e:	d1fa      	bne.n	8000166 <__libc_init_array+0xe>
 8000170:	f000 f876 	bl	8000260 <_init>
 8000174:	4d07      	ldr	r5, [pc, #28]	; (8000194 <__libc_init_array+0x3c>)
 8000176:	4e08      	ldr	r6, [pc, #32]	; (8000198 <__libc_init_array+0x40>)
 8000178:	1b76      	subs	r6, r6, r5
 800017a:	10b6      	asrs	r6, r6, #2
 800017c:	d005      	beq.n	800018a <__libc_init_array+0x32>
 800017e:	2400      	movs	r4, #0
 8000180:	cd08      	ldmia	r5!, {r3}
 8000182:	3401      	adds	r4, #1
 8000184:	4798      	blx	r3
 8000186:	42a6      	cmp	r6, r4
 8000188:	d1fa      	bne.n	8000180 <__libc_init_array+0x28>
 800018a:	bd70      	pop	{r4, r5, r6, pc}
 800018c:	08000278 	.word	0x08000278
 8000190:	08000278 	.word	0x08000278
 8000194:	08000278 	.word	0x08000278
 8000198:	0800027c 	.word	0x0800027c

0800019c <main>:

#define PIN5 (1U << 5)
#define LED_PIN PIN5

int main(void)
{
 800019c:	b580      	push	{r7, lr}
 800019e:	b082      	sub	sp, #8
 80001a0:	af00      	add	r7, sp, #0
     /* 1 enable clock access */
     RCC_AHBENR |= GPIOA_EN;
 80001a2:	4b16      	ldr	r3, [pc, #88]	; (80001fc <main+0x60>)
 80001a4:	681b      	ldr	r3, [r3, #0]
 80001a6:	001a      	movs	r2, r3
 80001a8:	2380      	movs	r3, #128	; 0x80
 80001aa:	029b      	lsls	r3, r3, #10
 80001ac:	431a      	orrs	r2, r3
 80001ae:	4b13      	ldr	r3, [pc, #76]	; (80001fc <main+0x60>)
 80001b0:	601a      	str	r2, [r3, #0]

     /* 2 set PA5 as output */
     GPIOA_MODER |= (1U<<10); /* bit 10 to 1 */
 80001b2:	2390      	movs	r3, #144	; 0x90
 80001b4:	05db      	lsls	r3, r3, #23
 80001b6:	681b      	ldr	r3, [r3, #0]
 80001b8:	001a      	movs	r2, r3
 80001ba:	2380      	movs	r3, #128	; 0x80
 80001bc:	00db      	lsls	r3, r3, #3
 80001be:	431a      	orrs	r2, r3
 80001c0:	2390      	movs	r3, #144	; 0x90
 80001c2:	05db      	lsls	r3, r3, #23
 80001c4:	601a      	str	r2, [r3, #0]
     GPIOA_MODER &=~(1U<<11); /* bit 11 to 0 */
 80001c6:	2390      	movs	r3, #144	; 0x90
 80001c8:	05db      	lsls	r3, r3, #23
 80001ca:	681a      	ldr	r2, [r3, #0]
 80001cc:	2390      	movs	r3, #144	; 0x90
 80001ce:	05db      	lsls	r3, r3, #23
 80001d0:	490b      	ldr	r1, [pc, #44]	; (8000200 <main+0x64>)
 80001d2:	400a      	ands	r2, r1
 80001d4:	601a      	str	r2, [r3, #0]

     while(1){
          /* /\* set PA5 high *\/ */
          /* GPIOA_ODR |= LED_PIN; */
          /* toggle */
          GPIOA_ODR ^= LED_PIN;
 80001d6:	4b0b      	ldr	r3, [pc, #44]	; (8000204 <main+0x68>)
 80001d8:	681b      	ldr	r3, [r3, #0]
 80001da:	001a      	movs	r2, r3
 80001dc:	2320      	movs	r3, #32
 80001de:	405a      	eors	r2, r3
 80001e0:	4b08      	ldr	r3, [pc, #32]	; (8000204 <main+0x68>)
 80001e2:	601a      	str	r2, [r3, #0]
          for(int i =0; i <= 100000; i++){
 80001e4:	2300      	movs	r3, #0
 80001e6:	607b      	str	r3, [r7, #4]
 80001e8:	e002      	b.n	80001f0 <main+0x54>
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	3301      	adds	r3, #1
 80001ee:	607b      	str	r3, [r7, #4]
 80001f0:	687b      	ldr	r3, [r7, #4]
 80001f2:	4a05      	ldr	r2, [pc, #20]	; (8000208 <main+0x6c>)
 80001f4:	4293      	cmp	r3, r2
 80001f6:	ddf8      	ble.n	80001ea <main+0x4e>
          GPIOA_ODR ^= LED_PIN;
 80001f8:	e7ed      	b.n	80001d6 <main+0x3a>
 80001fa:	46c0      	nop			; (mov r8, r8)
 80001fc:	40021014 	.word	0x40021014
 8000200:	fffff7ff 	.word	0xfffff7ff
 8000204:	48000014 	.word	0x48000014
 8000208:	000186a0 	.word	0x000186a0

0800020c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800020c:	480d      	ldr	r0, [pc, #52]	; (8000244 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800020e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000210:	e000      	b.n	8000214 <Reset_Handler+0x8>
 8000212:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000214:	480c      	ldr	r0, [pc, #48]	; (8000248 <LoopForever+0x6>)
  ldr r1, =_edata
 8000216:	490d      	ldr	r1, [pc, #52]	; (800024c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000218:	4a0d      	ldr	r2, [pc, #52]	; (8000250 <LoopForever+0xe>)
  movs r3, #0
 800021a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800021c:	e002      	b.n	8000224 <LoopCopyDataInit>

0800021e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800021e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000220:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000222:	3304      	adds	r3, #4

08000224 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000224:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000226:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000228:	d3f9      	bcc.n	800021e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800022a:	4a0a      	ldr	r2, [pc, #40]	; (8000254 <LoopForever+0x12>)
  ldr r4, =_ebss
 800022c:	4c0a      	ldr	r4, [pc, #40]	; (8000258 <LoopForever+0x16>)
  movs r3, #0
 800022e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000230:	e001      	b.n	8000236 <LoopFillZerobss>

08000232 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000232:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000234:	3204      	adds	r2, #4

08000236 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000236:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000238:	d3fb      	bcc.n	8000232 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800023a:	f7ff ff8d 	bl	8000158 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800023e:	f7ff ffad 	bl	800019c <main>

08000242 <LoopForever>:

LoopForever:
    b LoopForever
 8000242:	e7fe      	b.n	8000242 <LoopForever>
  ldr   r0, =_estack
 8000244:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 8000248:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800024c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000250:	08000280 	.word	0x08000280
  ldr r2, =_sbss
 8000254:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000258:	2000001c 	.word	0x2000001c

0800025c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800025c:	e7fe      	b.n	800025c <ADC_IRQHandler>
	...

08000260 <_init>:
 8000260:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000262:	46c0      	nop			; (mov r8, r8)
 8000264:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000266:	bc08      	pop	{r3}
 8000268:	469e      	mov	lr, r3
 800026a:	4770      	bx	lr

0800026c <_fini>:
 800026c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800026e:	46c0      	nop			; (mov r8, r8)
 8000270:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000272:	bc08      	pop	{r3}
 8000274:	469e      	mov	lr, r3
 8000276:	4770      	bx	lr
